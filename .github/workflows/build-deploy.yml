name: Build and deploy master

on: [push]

env:
    IMAGE: docker.pkg.github.com/${{ github.repository }}/iaweb-monitorering:${{ github.sha }}

jobs:
    compile-test-and-build:
        name: Build and run tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                  node-version: '12.x'
            - uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-node-cache-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-cache-
            - name: Install dependencies
              run: |
                  npm ci
            - name: Build tag and push Docker container
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  docker build . -t ${IMAGE}
                  echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
                  echo ${IMAGE}
                  docker push ${IMAGE}

    deploy-to-dev-fss:
        name: Deploy to dev-fss
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/oppdatere-avhengigheter-august-2021'
        needs: compile-test-and-build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  VAR: version=${{ env.IMAGE }}
                  RESOURCE: nais/dev-fss.yaml
                  PRINT_PAYLOAD: true

    deploy-to-prod-fss:
        name: Deploy to prod-fss
        if: github.ref == 'refs/heads/master'
        needs: deploy-to-dev-fss
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-fss
                  VAR: version=${{ env.IMAGE }}
                  RESOURCE: nais/prod-fss.yaml
                  PRINT_PAYLOAD: true
